{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setImputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","image","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAmCeA,MAhCf,YAAuC,IAAjBC,EAAgB,EAAhBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBW,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAM,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEVC,EAFU,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGVG,EAHU,gBAIGA,EAAIC,OAJP,uBAITC,EAJS,EAITA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVC,MAAK,UAACH,EAAII,cAAL,aAAC,EAAYC,iBAAiBb,QAV3B,kBAaTM,GAbS,4CAAD,sDCUJQ,MATf,YAA0C,IAApBJ,EAAmB,EAAnBA,MAAWC,GAAQ,EAAZF,GAAY,EAARE,OAC7B,OACI,sBAAKI,UAAU,uBAAf,UACI,qBAAKC,IAAKL,EAAOM,IAAKN,IACtB,4BAAID,QCFHQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLc,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAU,WACNzB,EAAOC,GACFyB,MAAK,SAAAf,GAAG,OAAEa,EAAS,CAChBhB,KAAKG,EACLW,SAAQ,SAElB,CAACrB,IAEIsB,EDZiBI,CAAa1B,GAA9BO,EAAP,EAAOA,KAAMc,EAAb,EAAaA,QAEb,OACI,qCACK,oBAAIJ,UAAU,mCAAd,SAAkDjB,IAClDqB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAEQV,EAAKE,KAAI,SAACI,GAAD,OACL,cAAC,EAAD,eAEQA,GADCA,EAAMF,aEUxBgB,MAtBf,WAEI,MAAoCzC,mBAAS,IAA7C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAGA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACK2C,EAAWnB,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,YCT7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d18485f2.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCategory({setCategories}) {\r\n\r\n    const [inputValue, setImputValue] = useState('')\r\n\r\n    const handleInputValue=(e)=>{\r\n        setImputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cat => [inputValue, ...cat, ])\r\n            setImputValue('')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputValue}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\nexport const getGif=async(category)=> {\r\n    \r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=W447jMXKZWWmJeG28B4vSARPidhqZWm1&limit=10`\r\n    const res=await fetch(url)\r\n    const {data}=await res.json()\r\n\r\n    const gifs=data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            image:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n}\r\n","import React from 'react'\r\n\r\nfunction GifGridItem({title, id, image}) {\r\n    return (\r\n        <div className='card animate__fadeIn'>\r\n            <img src={image} alt={image} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data, loading} = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n            {<h3 className='animate__animated animate__flash'>{category}</h3>}\r\n            {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    data.map((image)=>\r\n                        <GifGridItem \r\n                            key={image.id} \r\n                            {...image} \r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {getGif} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGif(category )\r\n            .then(img=>setState({\r\n                data:img,\r\n                loading:false\r\n            }))\r\n    },[category])\r\n\r\n    return state\r\n}\r\n","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nfunction GifExpertApp() {\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {categories.map((category)=>\r\n                    <GifGrid \r\n                        key={category} \r\n                        category={category} \r\n                    />\r\n                )}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\nimport \"animate.css\"\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}